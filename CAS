<!DOCTYPE html>
<html lang="sk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generátor Správy pre CAS s Databázou</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; }
        .form-section { background-color: white; padding: 2rem; border-radius: 0.75rem; box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1); margin-bottom: 1.5rem; }
        .form-section h2 { font-size: 1.25rem; font-weight: 600; color: #1f2937; border-bottom: 1px solid #e5e7eb; padding-bottom: 0.75rem; margin-bottom: 1.5rem; }
        label.input-label { display: block; font-weight: 500; color: #374151; margin-bottom: 0.5rem; }
        input[type="text"], input[type="number"], select, textarea { width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.5rem; background-color: #f9fafb; color: #1f2937; transition: border-color 0.2s; }
        input[type="text"]:focus, input[type="number"]:focus, select:focus, textarea:focus { outline: none; border-color: #3b82f6; box-shadow: 0 0 0 2px #bfdbfe; }
        .derived-field { background-color: #e5e7eb; padding: 0.75rem; border-radius: 0.5rem; color: #4b5563; font-weight: 500; min-height: 46px; }
        .btn { padding: 0.75rem 1.5rem; border-radius: 0.5rem; font-weight: 600; cursor: pointer; transition: all 0.2s; display: inline-flex; align-items: center; justify-content: center; }
        .btn:disabled { background-color: #9ca3af; cursor: not-allowed; }
        .btn-primary { background-color: #16a34a; color: white; }
        .btn-primary:not(:disabled):hover { background-color: #15803d; }
        .btn-secondary { background-color: #4b5563; color: white; }
        .btn-secondary:not(:disabled):hover { background-color: #374151; }
        #copy-feedback, #copy-data-feedback, #save-feedback { transition: opacity 0.5s; }
        textarea { background-color: #ffffff; color: #1f2937; border: 1px solid #d1d5db; border-radius: 0.5rem; }
        .hidden { display: none; }
        table { width: 100%; border-collapse: collapse; }
        th, td { text-align: left; padding: 0.75rem; border-bottom: 1px solid #e5e7eb; }
        th { background-color: #f9fafb; font-weight: 600; }
        tr:nth-child(even) { background-color: #f9fafb; }
        .table-container { max-height: 400px; overflow-y: auto; }
    </style>
</head>
<body class="bg-gray-100 p-4 sm:p-6 md:p-8">
    <div class="max-w-7xl mx-auto">
        <header class="text-center mb-8">
            <h1 class="text-3xl font-bold text-gray-800">Generátor Správy pre CAS</h1>
            <p class="text-gray-600 mt-2">S automatickým ukladaním dát do databázy.</p>
        </header>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Input Form -->
            <div id="form-container">
                <!-- Pacient a Indikácia -->
                <div class="form-section">
                    <h2>Pacient a Indikácia</h2>
                    <div class="space-y-6">
                        <div>
                            <label for="rodne_cislo" class="input-label">Rodné číslo</label>
                            <input type="text" id="rodne_cislo" value="405101/123" placeholder="RRMMDD/XXXX">
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="input-label">Vek</label>
                                <div id="vek_display" class="derived-field"></div>
                            </div>
                            <div>
                                <label class="input-label">Pohlavie</label>
                                <div id="pohlavie_display" class="derived-field"></div>
                            </div>
                        </div>
                        <div>
                            <label for="lokalizacia" class="input-label">Lokalizácia lézie</label>
                            <select id="lokalizacia">
                                <option value="l.dx." selected>ACI l.dx.</option>
                                <option value="l.sin.">ACI l.sin.</option>
                            </select>
                        </div>
                        <div>
                            <label for="plat" class="input-label">Typ AS plátu</label>
                            <select id="plat">
                                <option value="mäkkým AS plátom (dif.dg. trombom)">mäkký (s dif.dg. trombom)</option>
                                <option value="mäkkým AS plátom">mäkký</option>
                                <option value="hrubo kalcifikovaným AS plátom">hrubo kalcifikovaný</option>
                                <option value="zmiešaným AS plátom">zmiešaný</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Priebeh Výkonu -->
                <div class="form-section">
                    <h2>Priebeh Výkonu</h2>
                    <div class="space-y-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label for="anestezia_typ" class="input-label">Anestézia</label>
                                <input type="text" id="anestezia_typ" value="lokálnej anestézii">
                            </div>
                            <div>
                                <label for="sheath_uvodny" class="input-label">Úvodný sheath</label>
                                <input type="text" id="sheath_uvodny" value="5F">
                            </div>
                            <div>
                                <label for="kateter_diag" class="input-label">Diagnostický katéter</label>
                                <select id="kateter_diag">
                                    <option value="Berenstein">Berenstein</option>
                                    <option value="SIM1">SIM1</option>
                                    <option value="SIM2">SIM2</option>
                                    <option value="Vittek">Vittek</option>
                                    <option value="Vertebrálneho">Vertebrálneho</option>
                                </select>
                            </div>
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 border-t pt-6 mt-6 border-gray-200">
                            <div>
                                <label for="sheath_intervencny_fr" class="input-label">Interv. sheath (F)</label>
                                <select id="sheath_intervencny_fr">
                                    <option value="5F">5F</option>
                                    <option value="6F" selected>6F</option>
                                    <option value="7F">7F</option>
                                    <option value="8F">8F</option>
                                </select>
                            </div>
                            <div>
                                <label for="sheath_intervencny_dlzka" class="input-label">Dĺžka (cm)</label>
                                <input type="text" id="sheath_intervencny_dlzka" value="90cm">
                            </div>
                            <div>
                                <label for="sheath_intervencny_znacka" class="input-label">Značka</label>
                                <select id="sheath_intervencny_znacka">
                                    <option value="DuraSheath" selected>DuraSheath</option>
                                    <option value="Neuron MAX">Neuron MAX</option>
                                    <option value="Fortres">Fortres</option>
                                </select>
                            </div>
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                             <div>
                                <label class="input-label">Intervenčný vodič</label>
                                <div class="grid grid-cols-2 gap-2">
                                    <input type="text" id="vodic_intervencny_spec" value='0.014"'>
                                    <select id="vodic_intervencny_brand">
                                        <option selected>Asahi Chikai Black</option>
                                        <option>Syncro</option>
                                    </select>
                                </div>
                            </div>
                            <div>
                                <label for="emboloprotekcia" class="input-label">Emboloprotekcia</label>
                                <input type="text" id="emboloprotekcia" value="6mm (Spider Fx)">
                            </div>
                        </div>
                        
                        <div class="pt-6 mt-6 border-t border-gray-200 space-y-4">
                            <div class="flex items-center">
                                <input id="vykonat_predilataciu" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500" checked>
                                <label for="vykonat_predilataciu" class="ml-2 block text-sm font-medium text-gray-900">Vykonať predilatáciu</label>
                            </div>
                            <div id="predilatacia_options_container" class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label for="balon_predilatacia_velkost" class="input-label">Veľkosť balóna</label>
                                    <select id="balon_predilatacia_velkost">
                                        <option>3x20mm</option>
                                        <option>4x20mm</option>
                                        <option>5x20mm</option>
                                        <option>6x20mm</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="balon_predilatacia_znacka" class="input-label">Značka balóna</label>
                                    <select id="balon_predilatacia_znacka">
                                        <option>Sterling</option>
                                        <option selected>Ultrasoft</option>
                                        <option>pITA</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-span-1 md:col-span-2">
                            <label class="input-label">Stent</label>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label for="stent_velkost" class="input-label text-sm">Veľkosť (mm)</label>
                                    <input type="text" id="stent_velkost" value="8x20mm">
                                </div>
                                <div>
                                    <label for="stent_znacka" class="input-label text-sm">Značka</label>
                                    <select id="stent_znacka">
                                        <option selected>Casper</option>
                                        <option>C-Guard</option>
                                        <option>X-act</option>
                                        <option>Protégé Rx</option>
                                        <option>Roadsaver</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="pt-6 mt-6 border-t border-gray-200 space-y-4">
                            <div class="flex items-center">
                                <input id="vykonat_domodelovanie" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500" checked>
                                <label for="vykonat_domodelovanie" class="ml-2 block text-sm font-medium text-gray-900">Vykonať domodelovanie</label>
                            </div>
                            <div id="domodelovanie_options_container" class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label for="balon_domodelovanie_velkost" class="input-label">Veľkosť balóna</label>
                                    <select id="balon_domodelovanie_velkost">
                                        <option>3x20mm</option>
                                        <option>4x20mm</option>
                                        <option selected>5x20mm</option>
                                        <option>6x20mm</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="balon_domodelovanie_znacka" class="input-label">Značka balóna</label>
                                    <select id="balon_domodelovanie_znacka">
                                        <option>Sterling</option>
                                        <option selected>Ultra-soft</option>
                                        <option>pITA</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Uzáver a Záver -->
                <div class="form-section">
                    <h2>Uzáver a Záver</h2>
                    <div class="space-y-6">
                        <div>
                            <label for="uzatvaraci_system" class="input-label">Uzatvárací systém</label>
                            <select id="uzatvaraci_system">
                                <option>AngioSeal 6F</option>
                                <option>ProStyle</option>
                                <option>FemoSeal</option>
                                <option>MynxGrip</option>
                                <option>manuálne komprimujeme</option>
                            </select>
                        </div>
                        <div class="pt-2 space-y-4">
                            <div class="flex items-center">
                                <input id="vykonat_hemostazu" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500" checked>
                                <label for="vykonat_hemostazu" class="ml-2 block text-sm font-medium text-gray-900">Pridať poznámku o hemostáze</label>
                            </div>
                            <div id="hemostaza_options_container">
                                <label for="hemostaza_text" class="input-label">Text hemostázy</label>
                                <select id="hemostaza_text">
                                    <option>dosahujeme úplnú hemostázu</option>
                                    <option>dosahujeme hemostázu pomocou PatchPro bandáže</option>
                                </select>
                            </div>
                        </div>
                        <div>
                            <label for="vysledok" class="input-label">Výsledný obraz</label>
                            <input type="text" id="vysledok" value="pekný, bez perifernej embolizácie">
                        </div>
                        <div>
                            <label for="zaver_vykonu" class="input-label">Záver</label>
                            <input type="text" id="zaver_vykonu" value="CAS ACI l.dx. s dobrým efektom, bez komplikácii.">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Output and Data Collection Section -->
            <div class="sticky top-8 self-start">
                <div class="form-section">
                    <h2>Vygenerovaná Správa</h2>
                    <div class="space-y-4">
                        <textarea id="output" rows="12" readonly></textarea>
                        <button id="copy-btn" class="btn btn-secondary w-full">Kopírovať text správy</button>
                        <p id="copy-feedback" class="text-center text-green-600 font-medium opacity-0">Text správy bol skopírovaný!</p>
                    </div>
                </div>

                <div class="form-section mt-8">
                    <h2>Zozbierané dáta pre štúdiu</h2>
                    <div class="space-y-4">
                        <div id="db-status" class="text-center p-2 rounded-md bg-gray-200 text-gray-600">Pripájam k databáze...</div>
                        <div class="table-container">
                            <table id="data-table">
                                <thead></thead>
                                <tbody></tbody>
                            </table>
                        </div>
                        <button id="save-data-btn" class="btn btn-primary w-full" disabled>Uložiť dáta pacienta</button>
                        <p id="save-feedback" class="text-center text-green-600 font-medium opacity-0">Dáta úspešne uložené!</p>
                        <button id="copy-data-btn" class="btn btn-secondary w-full">Kopírovať zozbierané dáta (CSV)</button>
                        <p id="copy-data-feedback" class="text-center text-green-600 font-medium opacity-0">Zozbierané dáta boli skopírované!</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="module">
        // Firebase Imports
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getAuth, signInAnonymously, signInWithCustomToken } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import { getFirestore, collection, addDoc, onSnapshot, serverTimestamp, setLogLevel } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        // --- DOM Elements ---
        const getElement = (id) => document.getElementById(id);
        const getValue = (id) => getElement(id).value.trim();

        // --- Firebase Setup ---
        let db;
        let auth;
        let recordsCollection;
        const dbStatusEl = getElement('db-status');
        const saveDataBtn = getElement('save-data-btn');

        try {
            // NOTE: Replace with your actual Firebase config
            const firebaseConfig = {
                apiKey: "YOUR_API_KEY",
                authDomain: "YOUR_AUTH_DOMAIN",
                projectId: "YOUR_PROJECT_ID",
                storageBucket: "YOUR_STORAGE_BUCKET",
                messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
                appId: "YOUR_APP_ID"
            };
            // In a real environment, __firebase_config and __app_id would be provided.
            // For GitHub Pages, you need to paste your config here directly.
            
            const app = initializeApp(firebaseConfig);
            db = getFirestore(app);
            auth = getAuth(app);
            
            await signInAnonymously(auth);

            // The collection path is simple for a public demo.
            recordsCollection = collection(db, `cas_records_public`);
            dbStatusEl.textContent = 'Pripojené k databáze';
            dbStatusEl.classList.replace('bg-gray-200', 'bg-green-100');
            dbStatusEl.classList.replace('text-gray-600', 'text-green-800');
            saveDataBtn.disabled = false;
            
            onSnapshot(recordsCollection, (snapshot) => {
                const records = [];
                snapshot.forEach(doc => {
                    records.push({ id: doc.id, ...doc.data() });
                });
                renderTable(records);
            });

        } catch (error) {
            console.error("Firebase initialization failed:", error);
            dbStatusEl.textContent = 'Chyba: Vložte vlastnú Firebase konfiguráciu!';
            dbStatusEl.classList.replace('bg-gray-200', 'bg-red-100');
            dbStatusEl.classList.replace('text-gray-600', 'text-red-800');
        }

        /**
         * @param {string} rc - The personal identification number.
         * @returns {object|null} An object with age and gender, or null if invalid.
         */
        function parseRodneCislo(rc) {
            if (!rc) return null;
            const cleanedRc = rc.replace(/\D/g, '');

            if (cleanedRc.length < 9 || cleanedRc.length > 10) {
                return null;
            }

            let year = parseInt(cleanedRc.substring(0, 2), 10);
            let month = parseInt(cleanedRc.substring(2, 4), 10);
            const day = parseInt(cleanedRc.substring(4, 6), 10);

            let gender = 'Muž';
            if (month > 50) {
                gender = 'Žena';
                month -= 50;
            }

            let fullYear;
            if (cleanedRc.length === 9) {
                fullYear = 1900 + year;
            } else {
                const currentYear = new Date().getFullYear() % 100;
                fullYear = (year > currentYear) ? 1900 + year : 2000 + year;
            }

            const birthDate = new Date(fullYear, month - 1, day);
            
            if ( isNaN(birthDate.getTime()) || birthDate.getFullYear() !== fullYear || birthDate.getMonth() !== month - 1 || birthDate.getDate() !== day || birthDate > new Date() ) {
                return null;
            }
            
            if (cleanedRc.length === 10 && fullYear < 1954) return null;
            if (cleanedRc.length === 9 && fullYear >= 1954) return null;

            const currentYear = new Date().getFullYear();
            let age = currentYear - birthDate.getFullYear();
            const m = new Date().getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && new Date().getDate() < birthDate.getDate())) {
                age--;
            }

            return { age, gender };
        }

        // --- Data Collection and Table Rendering ---
        const tableHeaderEl = getElement('data-table').querySelector('thead');
        const tableBodyEl = getElement('data-table').querySelector('tbody');
        const dataHeaders = ["Datum_Zaznamu", "Rodne_Cislo", "Vek", "Pohlavie", "Lokalizacia_Lezie", "Typ_Platu", "Anestezia", "Uvodny_Sheath", "Diag_Kateter", "Interv_Sheath", "Interv_Vodic", "Emboloprotekcia", "Predilatacia_Vykonana", "Predilatacny_Balon", "Stent", "Domodelovanie_Vykonane", "Domodelovaci_Balon", "Uzatvaraci_System", "Poznamka_Hemostaza", "Text_Hemostazy", "Vysledok", "Zaver"];

        function renderTable(records) {
            tableHeaderEl.innerHTML = `<tr>${dataHeaders.map(h => `<th>${h}</th>`).join('')}</tr>`;
            tableBodyEl.innerHTML = records
                .sort((a, b) => (b.createdAt?.toMillis() || 0) - (a.createdAt?.toMillis() || 0))
                .map(record => `
                    <tr>
                        ${dataHeaders.map(header => `<td>${record[header] || ''}</td>`).join('')}
                    </tr>
                `).join('');
        }

        function getFormData() {
            const vykonatPredilataciu = getElement('vykonat_predilataciu').checked;
            const balonPredilatacia = vykonatPredilataciu ? `${getValue('balon_predilatacia_velkost')} (${getValue('balon_predilatacia_znacka')})` : 'N/A';

            const vykonatDomodelovanie = getElement('vykonat_domodelovanie').checked;
            const balonDomodelovanie = vykonatDomodelovanie ? `${getValue('balon_domodelovanie_velkost')} (${getValue('balon_domodelovanie_znacka')})` : 'N/A';
            
            const stent = getValue('stent_velkost') ? `${getValue('stent_velkost')} (${getValue('stent_znacka')})` : `(${getValue('stent_znacka')})`;
            
            const vykonatHemostazu = getElement('vykonat_hemostazu').checked;
            const textHemostazy = vykonatHemostazu ? getValue('hemostaza_text') : 'N/A';

            return {
                Datum_Zaznamu: new Date().toLocaleString('sk-SK'),
                Rodne_Cislo: getValue('rodne_cislo'),
                Vek: getElement('vek_display').textContent,
                Pohlavie: getElement('pohlavie_display').textContent,
                Lokalizacia_Lezie: getValue('lokalizacia'),
                Typ_Platu: getElement('plat').options[getElement('plat').selectedIndex].text,
                Anestezia: getValue('anestezia_typ'),
                Uvodny_Sheath: getValue('sheath_uvodny'),
                Diag_Kateter: getValue('kateter_diag'),
                Interv_Sheath: `${getValue('sheath_intervencny_fr')} ${getValue('sheath_intervencny_dlzka')} (${getValue('sheath_intervencny_znacka')})`,
                Interv_Vodic: `${getValue('vodic_intervencny_spec')} (${getValue('vodic_intervencny_brand')})`,
                Emboloprotekcia: getValue('emboloprotekcia'),
                Predilatacia_Vykonana: vykonatPredilataciu ? 'Ano' : 'Nie',
                Predilatacny_Balon: balonPredilatacia,
                Stent: stent,
                Domodelovanie_Vykonane: vykonatDomodelovanie ? 'Ano' : 'Nie',
                Domodelovaci_Balon: balonDomodelovanie,
                Uzatvaraci_System: getValue('uzatvaraci_system'),
                Poznamka_Hemostaza: vykonatHemostazu ? 'Ano' : 'Nie',
                Text_Hemostazy: textHemostazy,
                Vysledok: getValue('vysledok'),
                Zaver: getValue('zaver_vykonu'),
                createdAt: serverTimestamp()
            };
        }

        async function saveData() {
            if (!db) {
                alert("Databáza nie je pripojená. Skontrolujte Firebase konfiguráciu v HTML súbore.");
                return;
            }
            saveDataBtn.disabled = true;
            saveDataBtn.textContent = 'Ukladám...';
            
            try {
                const dataToSave = getFormData();
                await addDoc(recordsCollection, dataToSave);
                
                const feedback = getElement('save-feedback');
                feedback.style.opacity = 1;
                setTimeout(() => { feedback.style.opacity = 0; }, 2000);

            } catch (error) {
                console.error("Error adding document: ", error);
                alert("Nastala chyba pri ukladaní dát.");
            } finally {
                saveDataBtn.disabled = false;
                saveDataBtn.textContent = 'Uložiť dáta pacienta';
            }
        }

        function copyDataAsCSV() {
            let csvContent = dataHeaders.join(',') + '\n';
            const rows = tableBodyEl.querySelectorAll('tr');
            rows.forEach(row => {
                const rowData = [];
                row.querySelectorAll('td').forEach(cell => {
                    let cellData = cell.textContent.replace(/"/g, '""');
                    if (cellData.includes(',')) {
                        cellData = `"${cellData}"`;
                    }
                    rowData.push(cellData);
                });
                csvContent += rowData.join(',') + '\n';
            });
            
            copyToClipboard(csvContent, 'copy-data-feedback', 'Zozbierané dáta (CSV) boli skopírované!');
        }

        function generateReport() {
            const vek = getElement('vek_display').textContent;
            const pohlavieText = getElement('pohlavie_display').textContent;
            const lokalizacia = getValue('lokalizacia');
            const plat = getElement('plat').options[getElement('plat').selectedIndex].text;
            const anestezia = getValue('anestezia_typ');
            const sheathUvodny = getValue('sheath_uvodny');
            const kateterDiag = getValue('kateter_diag');
            const sheathIntervencny = `${getValue('sheath_intervencny_fr')} ${getValue('sheath_intervencny_dlzka')} (${getValue('sheath_intervencny_znacka')})`;
            const vodicIntervencny = `${getValue('vodic_intervencny_spec')} (${getValue('vodic_intervencny_brand')})`;
            const emboloprotekcia = getValue('emboloprotekcia');
            const stent = getValue('stent_velkost') ? `${getValue('stent_velkost')} (${getValue('stent_znacka')})` : `(${getValue('stent_znacka')})`;
            const vysledok = getValue('vysledok');
            let zaver = getValue('zaver_vykonu');
            const jeZena = pohlavieText === 'Žena';
            const pacientText = jeZena ? 'pacientka' : 'pacient';
            const vekText = (vek !== 'N/A') ? (jeZena ? 'ročná' : 'ročný') : '';
            const indikaciaText = jeZena ? 'indikovaná' : 'indikovaný';
            const strana = lokalizacia.includes('l.dx.') ? 'l.dx.' : 'l.sin.';
            const pristupSlovom = lokalizacia.includes('l.dx.') ? 'Sprava' : 'Zľava';
            const aciFullName = `ACI ${strana}`;
            const accFullName = `ACC ${strana}`;
            const aceFullName = `ACE ${strana}`;
            const afcFullName = `AFC ${strana}`;
            if (zaver.includes("ACI l.dx.") || zaver.includes("ACI l.sin.")) {
                zaver = `CAS ${aciFullName} s dobrým efektom, bez komplikácii.`;
                getElement('zaver_vykonu').value = zaver;
            }
            const uvod = `${vek} ${vekText} ${pacientText} so symptomatickou kritickou stenózou ${aciFullName} s ${plat} ${indikaciaText} k EVL:`;
            const priebeh_a = `${pristupSlovom} po ${anestezia}, Seldingerovou technikou, retrográdne pungujeme ${afcFullName}, zavádzame ${sheathUvodny} sheath a pomocou ${kateterDiag} katétra katetrizujeme ${accFullName} a ďalej diagnostická angiografia, na ktorej verifikujeme kritickú odstupovú stenózu ${aciFullName} a pristupujeme k intervencii:`;
            let interventionParts = [];
            if (getElement('vykonat_predilataciu').checked) {
                const balonPredilatacia = `${getValue('balon_predilatacia_velkost')} (${getValue('balon_predilatacia_znacka')})`;
                interventionParts.push(`Léziu predilatujeme pomocou PTA balónového katétra ${balonPredilatacia}`);
            }
            let implantaciaCast = interventionParts.length > 0 ? "v ďalšom kroku pristupujeme" : "V ďalšom kroku pristupujeme";
            implantaciaCast += ` k implantácii stentu ${stent}`;
            if (getElement('vykonat_domodelovanie').checked) {
                const balonDomodelovanie = `${getValue('balon_domodelovanie_velkost')} (${getValue('balon_domodelovanie_znacka')})`;
                implantaciaCast += ` a k domodelovaniu pomocou PTA balóna ${balonDomodelovanie}`;
            }
            interventionParts.push(implantaciaCast);
            const vetaIntervencie = interventionParts.join(', ');
            const priebeh_b = `Zavádzame Storq vodič do ${aceFullName}, vymieňame sheath za ${sheathIntervencny}, pomocou ${vodicIntervencny} vodiča katetrizujeme ${aciFullName} a zavádzame distálnu emboloprotekciu ${emboloprotekcia}.\n${vetaIntervencie}.\nVýsledný angiografický obraz ${vysledok}.`;
            const uzatvaraciSystem = getValue('uzatvaraci_system');
            let uzaver = uzatvaraciSystem === 'manuálne komprimujeme' ? `Miesto vpichu ${uzatvaraciSystem}` : `Miesto vpichu uzatvárame pomocou ${uzatvaraciSystem}`;
            if (getElement('vykonat_hemostazu').checked) {
                uzaver += `, ${getValue('hemostaza_text')}`;
            }
            uzaver += ".";
            const zaver_final = `Z: ${zaver}`;
            const report = [uvod, priebeh_a, priebeh_b, uzaver, zaver_final].join('\n\n');
            getElement('output').value = report;
        }

        function copyToClipboard(text, feedbackId, feedbackText) {
            const feedback = getElement(feedbackId);
            if (!text) return;
            navigator.clipboard.writeText(text).then(() => {
                feedback.textContent = feedbackText;
                feedback.style.color = '#16a34a';
                feedback.style.opacity = 1;
                setTimeout(() => { feedback.style.opacity = 0; }, 2000);
            }).catch(err => {
                console.error('Failed to copy text: ', err);
                feedback.textContent = 'Kopírovanie zlyhalo.';
                feedback.style.color = '#dc2626';
                feedback.style.opacity = 1;
                setTimeout(() => { feedback.style.opacity = 0; }, 3000);
            });
        }
        
        function updatePatientInfoFromRC() {
            const rcInput = getValue('rodne_cislo');
            const patientInfo = parseRodneCislo(rcInput);
            const vekDisplay = getElement('vek_display');
            const pohlavieDisplay = getElement('pohlavie_display');
            if (patientInfo) {
                vekDisplay.textContent = patientInfo.age;
                pohlavieDisplay.textContent = patientInfo.gender;
            } else {
                vekDisplay.textContent = 'N/A';
                pohlavieDisplay.textContent = 'N/A';
            }
            generateReport();
        }

        // --- Event Listeners ---
        const form = getElement('form-container');
        form.addEventListener('input', generateReport);
        form.addEventListener('change', generateReport);
        
        getElement('rodne_cislo').addEventListener('input', updatePatientInfoFromRC);
        getElement('vykonat_predilataciu').addEventListener('change', () => toggleOptions('vykonat_predilataciu', 'predilatacia_options_container'));
        getElement('vykonat_domodelovanie').addEventListener('change', () => toggleOptions('vykonat_domodelovanie', 'domodelovanie_options_container'));
        getElement('vykonat_hemostazu').addEventListener('change', () => toggleOptions('vykonat_hemostazu', 'hemostaza_options_container'));
        
        saveDataBtn.addEventListener('click', saveData);
        getElement('copy-btn').addEventListener('click', () => copyToClipboard(getElement('output').value, 'copy-feedback', 'Text správy bol skopírovaný!'));
        getElement('copy-data-btn').addEventListener('click', copyDataAsCSV);

        // --- Initial Generation ---
        document.addEventListener('DOMContentLoaded', () => {
            updatePatientInfoFromRC();
            toggleOptions('vykonat_predilataciu', 'predilatacia_options_container');
            toggleOptions('vykonat_domodelovanie', 'domodelovanie_options_container');
            toggleOptions('vykonat_hemostazu', 'hemostaza_options_container');
        });
    </script>
</body>
</html>
